echo "   [adding abk_env.env ...]"
ABK_SHELL="${SHELL##*/}"
if [ "$ABK_SHELL" = "bash" ]; then
    ABK_ENV_DIR=$(dirname $BASH_SOURCE)
elif [ "$ABK_SHELL" = "zsh" ]; then
    ABK_ENV_DIR=${0:a:h}
else
    echo "ERROR: $ABK_SHELL is not supported. Please consider using bash or zsh"
fi
# export ABK_ENV_DIR
export ABK_SHELL

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     ABK_UNIX_TYPE=linux;;
    Darwin*)    ABK_UNIX_TYPE=mac;;
    CYGWIN*)    ABK_UNIX_TYPE=cygwin;;
    MINGW*)     ABK_UNIX_TYPE=mingw;;
    *)          ABK_UNIX_TYPE="UNKNOWN:${unameOut}"
esac
export ABK_UNIX_TYPE

ABK_ENV_TO_ADD=(
    abk_vars.env
    abk_colors.env
    abk_7z_lib.env
    abk_aliases.env
    abk_aliases_private.env
    abk_aliases_hunter.env
    abk_aws.env
    abk_fastlane.env
    abk_prompt.env
    abk_python.env
    abk_sqlite.env
    abk_oh_my_shell.env
)

for (( i = 0; i <= ${#ABK_ENV_TO_ADD[@]}; i++)); do
    ABK_ENV_FULL_NAME="$ABK_ENV_DIR/${ABK_ENV_TO_ADD[$i]}"
    if [ -f $ABK_ENV_FULL_NAME ]; then
        echo "     [($i) adding $ABK_ENV_FULL_NAME ...]"
        source $ABK_ENV_FULL_NAME
    fi
done


#-------------------------
# if users bin directory exist and is not in the $PATH yet, include it
#-------------------------
USER_BIN="$HOME/$BIN_DIR"
USER_BIN_STR=":$USER_BIN:"
if [ -d $USER_BIN ] && [ ! -z "${PATH_STR##*$USER_BIN_STR*}" ]; then
    echo "     [adding users abk bin ($USER_BIN) to PATH ... ]"
    export PATH="$USER_BIN:$PATH"
else
    echo "     [users abk bin ($USER_BIN) is already in the PATH]"
fi
