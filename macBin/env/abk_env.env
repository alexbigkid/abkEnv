echo "   [üèÅ  adding abk_env.env ...]"
export ABK_SHELL="${SHELL##*/}"
if [ "$ABK_SHELL" = "bash" ]; then
    export ABK_ENV_DIR=$(dirname $BASH_SOURCE)
elif [ "$ABK_SHELL" = "zsh" ]; then
    export ABK_ENV_DIR=${0:a:h}
else
    echo "ERROR: $ABK_SHELL is not supported. Please consider using bash or zsh"
fi

ABK_ENV_TO_ADD=(
    001_vars.env
    002_colors.env
    003_7z_lib.env
    004_aliases.env
    005_aws.env
    006_dotnet.env
    007_node.env
    008_fastlane.env
    009_prompt.env
    010_python.env
    011_direnv.env
    012_sqlite.env
    013_oh_my_shell.env
    014_vim.env
    015_shunit2.env
    016_docker.env
    abk_work.env
)

for ((i = 0; i <= ${#ABK_ENV_TO_ADD[@]}; i++)); do
    ABK_ENV_FULL_NAME="$ABK_ENV_DIR/${ABK_ENV_TO_ADD[$i]}"
    if [ -f $ABK_ENV_FULL_NAME ]; then
        echo "     [($i) ‚òëÔ∏è  adding $ABK_ENV_FULL_NAME ...]"
        . $ABK_ENV_FULL_NAME
    fi
done

#-------------------------
# if users bin directory exist and is not in the $PATH yet, include it
#-------------------------
USER_BIN="$HOME/$BIN_DIR"
USER_BIN_STR=":$USER_BIN:"
if [ -d $USER_BIN ] && [ ! -z "${PATH_STR##*$USER_BIN_STR*}" ]; then
    echo "   [üèÅ  adding users abk bin ($USER_BIN) to PATH ... ]"
    export PATH="$USER_BIN:$PATH"
else
    echo "   [üèÅ  users abk bin ($USER_BIN) is already in the PATH]"
fi

#-------------------------
# some useful tools add binaries and libs in .local directory.
# So it needs to be in the PATH
#-------------------------
# export PATH=$HOME/.local/bin:$PATH
