ABK_NO_TRACE=0
ABK_CRITICAL_TRACE=1
ABK_FUNCTION_TRACE=2
ABK_INFO_TRACE=3
ABK_DETAILED_TRACE=4
ABK_ALL_TRACE=5
ABK_TRACE=$ABK_ALL_TRACE

# exit error codes
ERROR_CODE_SUCCESS=0
ERROR_CODE_GENERAL_ERROR=1
ERROR_CODE_NEEDED_FILE_DOES_NOT_EXIST=2
ERROR_CODE=$ERROR_CODE_SUCCESS


BIN_DIR="abkBin"
SH_BIN_DIR="macBin"
HOME_BIN_DIR="$HOME/$BIN_DIR"
SH_PACKAGES_DIR="macPackages"


unameOut="$(uname -s)"
case "${unameOut}" in
Linux*) export ABK_UNIX_TYPE=linux ;;
Darwin*) export ABK_UNIX_TYPE=mac ;;
CYGWIN*) export ABK_UNIX_TYPE=cygwin ;;
MINGW*) export ABK_UNIX_TYPE=mingw ;;
*) ABK_UNIX_TYPE="UNKNOWN:${unameOut}" ;;
esac


export ABK_SUPPORTED_SHELLS=(bash zsh)

ABK_USER_BASH_CONFIG_FILE=".bash_profile"
ABK_USER_ZSH_CONFIG_FILE=".zshrc"
export ABK_USER_SHELL_CONFIG_FILES=($ABK_USER_BASH_CONFIG_FILE $ABK_USER_ZSH_CONFIG_FILE)

if [ "$ABK_SHELL" = "bash" ]; then
    export ABK_USER_SHELL_CONFIG_FILE=$ABK_USER_BASH_CONFIG_FILE
elif [ "$ABK_SHELL" = "zsh" ]; then
    export ABK_USER_SHELL_CONFIG_FILE=$ABK_USER_ZSH_CONFIG_FILE
else
    echo "${RED}ERROR: $ABK_SHELL is not supported.\nPlease consider using one of those shells: ${ABK_SUPPORTED_SHELLS[*]}${NC}"
fi
