USER_ENV=$HOME/env

#-------------------------
# define colors
#-------------------------
if [[ "$NC" == ""  && -f $USER_ENV/abk_colors.env ]]; then
    source $USER_ENV/abk_colors.env
fi

#-------------------------
# default aliases
#-------------------------
if [ -f $USER_ENV/bash_aliases.env ]; then
    source $USER_ENV/bash_aliases.env
fi

#-------------------------
# abk private aliases
#-------------------------
if [ -f $USER_ENV/bash_aliases_abkp.env ]; then
    source $USER_ENV/bash_aliases_abkp.env
fi

#-------------------------
# abk 7z functions
#-------------------------
if [ -f $USER_ENV/abk_7z_lib.env ]; then
    source $USER_ENV/abk_7z_lib.env
fi

#-------------------------
# abk prompt config
#-------------------------
if [ -f $USER_ENV/abk_prompt.env ]; then
    source $USER_ENV/abk_prompt.env
fi

#-------------------------
# abk if new sqlite is installed and is not in the $PATH yet, include it
#-------------------------
SQLITE_BIN=/usr/local/opt/sqlite/bin
if [ -d $SQLITE_BIN ] && [[ ! ":$PATH:" == *":$SQLITE_BIN:"* ]]; then
    # echo "adding \$SQLITE_BIN ($SQLITE_BIN)"
    export PATH="$SQLITE_BIN:$PATH"
    export LDFLAGS="-L/usr/local/opt/sqlite/lib"
    export CPPFLAGS="-I/usr/local/opt/sqlite/include"
fi

#-------------------------
# if users bin directory exist and is not in the $PATH yet, include it
#-------------------------
USER_BIN="$HOME/bin"
if [ -d $USER_BIN ] && [[ ! ":$PATH:" == *":$USER_BIN:"* ]]; then
    # echo "adding \$USER_BIN ($USER_BIN)"
    export PATH="$USER_BIN:$PATH"
fi

#-------------------------
# if aws cli is installed
#-------------------------
AWS_CONFIG="$HOME/.aws/config"
if [ -f $AWS_CONFIG ] && [[ $AWS_CONFIG_FILE == "" ]]; then
    # echo "\$AWS_CONFIG exist but the \$AWS_CONFIG_FILE is not set yet."
    export AWS_CONFIG_FILE=$AWS_CONFIG
fi

#-------------------------
# if fastlane is installed and is not in the $PATH yet, include it
#-------------------------
FASTLANE_BIN="$HOME/.fastlane/bin"
if [ -d $FASTLANE_BIN ] && [[ ! ":$PATH:" == *":$FASTLANE_BIN:"* ]]; then
    # echo "adding \$FASTLANE_BIN ($FASTLANE_BIN)"
    export PATH="$FASTLANE_BIN:$PATH"
    export fastlane_DONT_STORE_PASSWORD=1
fi


#-------------------------
# include ruby environment
#-------------------------
RBENV_DIR="$HOME/.rbenv/shims"
if [ -d $RBENV_DIR ] && [[ ! ":$PATH:" == *":$RBENV_DIR:"* ]]; then
    echo "adding \$RBENV_DIR ($RBENV_DIR)"
    export PATH="$RBENV_DIR:$PATH"
fi

#-------------------------
# MacOS Catalina changed the default shell from bash to zsh
# this will silense the warning on terminal for now
# might need to convert all shell scripts later to sh or zsh
#-------------------------
export BASH_SILENCE_DEPRECATION_WARNING=1
